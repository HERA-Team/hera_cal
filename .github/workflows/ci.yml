name: Run Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  tests:
    name: Tests
    env:
      ENV_NAME: hera_cal_tests
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # Adding -l {0} helps ensure conda can be found properly in windows.
        shell: bash -l {0}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          auto-activate-base: false
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          environment-file: ci/${{ env.ENV_NAME }}.yml
          activate-environment: ${{ env.ENV_NAME }}

      - name: Conda Info
        run: |
          conda info -a
          conda list
          PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
          if [[ $PYVER != $PYTHON ]]; then
            exit 1;
          fi

      - name: Install
        run: |
          pip install .

      - name: Run Tests
        run: |
          pytest --pyargs hera_cal --cov=hera_cal --cov-config=./.coveragerc --cov-report xml:./coverage.xml

      - name: Upload Coverage (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && success()
        run: |
          bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}
